// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: v1/testObject.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Stuff           *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=stuff,proto3" json:"stuff,omitempty"`
	BoolMessage     bool                    `protobuf:"varint,3,opt,name=bool_message,json=boolMessage,proto3" json:"bool_message,omitempty"`
	BytesMessage    []byte                  `protobuf:"bytes,4,opt,name=bytes_message,json=bytesMessage,proto3" json:"bytes_message,omitempty"`
	DoubleMessage   float64                 `protobuf:"fixed64,5,opt,name=double_message,json=doubleMessage,proto3" json:"double_message,omitempty"`
	Fixed32Message  uint32                  `protobuf:"fixed32,6,opt,name=fixed32_message,json=fixed32Message,proto3" json:"fixed32_message,omitempty"`
	Fixed64Message  uint64                  `protobuf:"fixed64,7,opt,name=fixed64_message,json=fixed64Message,proto3" json:"fixed64_message,omitempty"`
	FloatMessage    float32                 `protobuf:"fixed32,8,opt,name=float_message,json=floatMessage,proto3" json:"float_message,omitempty"`
	Sfixed32Message int32                   `protobuf:"fixed32,9,opt,name=sfixed32_message,json=sfixed32Message,proto3" json:"sfixed32_message,omitempty"`
	Sfixed64Message int64                   `protobuf:"fixed64,10,opt,name=sfixed64_message,json=sfixed64Message,proto3" json:"sfixed64_message,omitempty"`
	Sint32Message   int32                   `protobuf:"zigzag32,11,opt,name=sint32_message,json=sint32Message,proto3" json:"sint32_message,omitempty"`
	Sint64Message   int64                   `protobuf:"zigzag64,12,opt,name=sint64_message,json=sint64Message,proto3" json:"sint64_message,omitempty"`
	Uint32Message   uint32                  `protobuf:"varint,13,opt,name=uint32_message,json=uint32Message,proto3" json:"uint32_message,omitempty"`
	Uint64Message   uint64                  `protobuf:"varint,14,opt,name=uint64_message,json=uint64Message,proto3" json:"uint64_message,omitempty"`
}

func (x *TestObject) Reset() {
	*x = TestObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_testObject_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestObject) ProtoMessage() {}

func (x *TestObject) ProtoReflect() protoreflect.Message {
	mi := &file_v1_testObject_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestObject.ProtoReflect.Descriptor instead.
func (*TestObject) Descriptor() ([]byte, []int) {
	return file_v1_testObject_proto_rawDescGZIP(), []int{0}
}

func (x *TestObject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestObject) GetStuff() *wrapperspb.StringValue {
	if x != nil {
		return x.Stuff
	}
	return nil
}

func (x *TestObject) GetBoolMessage() bool {
	if x != nil {
		return x.BoolMessage
	}
	return false
}

func (x *TestObject) GetBytesMessage() []byte {
	if x != nil {
		return x.BytesMessage
	}
	return nil
}

func (x *TestObject) GetDoubleMessage() float64 {
	if x != nil {
		return x.DoubleMessage
	}
	return 0
}

func (x *TestObject) GetFixed32Message() uint32 {
	if x != nil {
		return x.Fixed32Message
	}
	return 0
}

func (x *TestObject) GetFixed64Message() uint64 {
	if x != nil {
		return x.Fixed64Message
	}
	return 0
}

func (x *TestObject) GetFloatMessage() float32 {
	if x != nil {
		return x.FloatMessage
	}
	return 0
}

func (x *TestObject) GetSfixed32Message() int32 {
	if x != nil {
		return x.Sfixed32Message
	}
	return 0
}

func (x *TestObject) GetSfixed64Message() int64 {
	if x != nil {
		return x.Sfixed64Message
	}
	return 0
}

func (x *TestObject) GetSint32Message() int32 {
	if x != nil {
		return x.Sint32Message
	}
	return 0
}

func (x *TestObject) GetSint64Message() int64 {
	if x != nil {
		return x.Sint64Message
	}
	return 0
}

func (x *TestObject) GetUint32Message() uint32 {
	if x != nil {
		return x.Uint32Message
	}
	return 0
}

func (x *TestObject) GetUint64Message() uint64 {
	if x != nil {
		return x.Uint64Message
	}
	return 0
}

var File_v1_testObject_proto protoreflect.FileDescriptor

var file_v1_testObject_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x04, 0x0a, 0x0a, 0x54, 0x65,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x75, 0x66,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x74, 0x75, 0x66, 0x66, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0f, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0d, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x72, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_testObject_proto_rawDescOnce sync.Once
	file_v1_testObject_proto_rawDescData = file_v1_testObject_proto_rawDesc
)

func file_v1_testObject_proto_rawDescGZIP() []byte {
	file_v1_testObject_proto_rawDescOnce.Do(func() {
		file_v1_testObject_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_testObject_proto_rawDescData)
	})
	return file_v1_testObject_proto_rawDescData
}

var file_v1_testObject_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_v1_testObject_proto_goTypes = []interface{}{
	(*TestObject)(nil),             // 0: v1.TestObject
	(*wrapperspb.StringValue)(nil), // 1: google.protobuf.StringValue
}
var file_v1_testObject_proto_depIdxs = []int32{
	1, // 0: v1.TestObject.stuff:type_name -> google.protobuf.StringValue
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_testObject_proto_init() }
func file_v1_testObject_proto_init() {
	if File_v1_testObject_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_testObject_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_testObject_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_testObject_proto_goTypes,
		DependencyIndexes: file_v1_testObject_proto_depIdxs,
		MessageInfos:      file_v1_testObject_proto_msgTypes,
	}.Build()
	File_v1_testObject_proto = out.File
	file_v1_testObject_proto_rawDesc = nil
	file_v1_testObject_proto_goTypes = nil
	file_v1_testObject_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/testObject.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestObject struct {
	Id                   int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Stuff                *wrappers.StringValue `protobuf:"bytes,2,opt,name=stuff,proto3" json:"stuff,omitempty"`
	BoolMessage          bool                  `protobuf:"varint,3,opt,name=bool_message,json=boolMessage,proto3" json:"bool_message,omitempty"`
	BytesMessage         []byte                `protobuf:"bytes,4,opt,name=bytes_message,json=bytesMessage,proto3" json:"bytes_message,omitempty"`
	DoubleMessage        float64               `protobuf:"fixed64,5,opt,name=double_message,json=doubleMessage,proto3" json:"double_message,omitempty"`
	Fixed32Message       uint32                `protobuf:"fixed32,6,opt,name=fixed32_message,json=fixed32Message,proto3" json:"fixed32_message,omitempty"`
	Fixed64Message       uint64                `protobuf:"fixed64,7,opt,name=fixed64_message,json=fixed64Message,proto3" json:"fixed64_message,omitempty"`
	FloatMessage         float32               `protobuf:"fixed32,8,opt,name=float_message,json=floatMessage,proto3" json:"float_message,omitempty"`
	Sfixed32Message      int32                 `protobuf:"fixed32,9,opt,name=sfixed32_message,json=sfixed32Message,proto3" json:"sfixed32_message,omitempty"`
	Sfixed64Message      int64                 `protobuf:"fixed64,10,opt,name=sfixed64_message,json=sfixed64Message,proto3" json:"sfixed64_message,omitempty"`
	Sint32Message        int32                 `protobuf:"zigzag32,11,opt,name=sint32_message,json=sint32Message,proto3" json:"sint32_message,omitempty"`
	Sint64Message        int64                 `protobuf:"zigzag64,12,opt,name=sint64_message,json=sint64Message,proto3" json:"sint64_message,omitempty"`
	Uint32Message        uint32                `protobuf:"varint,13,opt,name=uint32_message,json=uint32Message,proto3" json:"uint32_message,omitempty"`
	Uint64Message        uint64                `protobuf:"varint,14,opt,name=uint64_message,json=uint64Message,proto3" json:"uint64_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TestObject) Reset()         { *m = TestObject{} }
func (m *TestObject) String() string { return proto.CompactTextString(m) }
func (*TestObject) ProtoMessage()    {}
func (*TestObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9d293925e30013b, []int{0}
}

func (m *TestObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestObject.Unmarshal(m, b)
}
func (m *TestObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestObject.Marshal(b, m, deterministic)
}
func (m *TestObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestObject.Merge(m, src)
}
func (m *TestObject) XXX_Size() int {
	return xxx_messageInfo_TestObject.Size(m)
}
func (m *TestObject) XXX_DiscardUnknown() {
	xxx_messageInfo_TestObject.DiscardUnknown(m)
}

var xxx_messageInfo_TestObject proto.InternalMessageInfo

func (m *TestObject) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestObject) GetStuff() *wrappers.StringValue {
	if m != nil {
		return m.Stuff
	}
	return nil
}

func (m *TestObject) GetBoolMessage() bool {
	if m != nil {
		return m.BoolMessage
	}
	return false
}

func (m *TestObject) GetBytesMessage() []byte {
	if m != nil {
		return m.BytesMessage
	}
	return nil
}

func (m *TestObject) GetDoubleMessage() float64 {
	if m != nil {
		return m.DoubleMessage
	}
	return 0
}

func (m *TestObject) GetFixed32Message() uint32 {
	if m != nil {
		return m.Fixed32Message
	}
	return 0
}

func (m *TestObject) GetFixed64Message() uint64 {
	if m != nil {
		return m.Fixed64Message
	}
	return 0
}

func (m *TestObject) GetFloatMessage() float32 {
	if m != nil {
		return m.FloatMessage
	}
	return 0
}

func (m *TestObject) GetSfixed32Message() int32 {
	if m != nil {
		return m.Sfixed32Message
	}
	return 0
}

func (m *TestObject) GetSfixed64Message() int64 {
	if m != nil {
		return m.Sfixed64Message
	}
	return 0
}

func (m *TestObject) GetSint32Message() int32 {
	if m != nil {
		return m.Sint32Message
	}
	return 0
}

func (m *TestObject) GetSint64Message() int64 {
	if m != nil {
		return m.Sint64Message
	}
	return 0
}

func (m *TestObject) GetUint32Message() uint32 {
	if m != nil {
		return m.Uint32Message
	}
	return 0
}

func (m *TestObject) GetUint64Message() uint64 {
	if m != nil {
		return m.Uint64Message
	}
	return 0
}

func init() {
	proto.RegisterType((*TestObject)(nil), "v1.TestObject")
}

func init() { proto.RegisterFile("v1/testObject.proto", fileDescriptor_f9d293925e30013b) }

var fileDescriptor_f9d293925e30013b = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd1, 0xdf, 0x4e, 0xa3, 0x40,
	0x14, 0xc7, 0xf1, 0x1c, 0xfa, 0x77, 0xa7, 0x40, 0xbb, 0xec, 0x4d, 0xb3, 0xd9, 0x6c, 0x8e, 0x9a,
	0xc6, 0xe3, 0x0d, 0x4d, 0xff, 0xa4, 0x6f, 0x61, 0x4c, 0x46, 0xe3, 0xad, 0x01, 0x19, 0x08, 0x06,
	0x3b, 0x0d, 0x33, 0x54, 0x7d, 0x23, 0x1f, 0xd3, 0xc8, 0x94, 0x91, 0x72, 0xfb, 0xcb, 0x87, 0xef,
	0x21, 0x19, 0xf6, 0xe7, 0xb8, 0x5a, 0x6a, 0xa1, 0xf4, 0x5d, 0xfc, 0x22, 0x9e, 0x75, 0x78, 0x28,
	0xa5, 0x96, 0x81, 0x73, 0x5c, 0xfd, 0xfd, 0x9f, 0x49, 0x99, 0x15, 0x62, 0x59, 0x2f, 0x71, 0x95,
	0x2e, 0xdf, 0xca, 0xe8, 0x70, 0x10, 0xa5, 0x32, 0xe6, 0xf2, 0xb3, 0xcf, 0xd8, 0x83, 0xfd, 0x30,
	0xf0, 0x99, 0x93, 0x27, 0x73, 0x40, 0xa0, 0x1e, 0x77, 0xf2, 0x24, 0x58, 0xb3, 0x81, 0xd2, 0x55,
	0x9a, 0xce, 0x1d, 0x04, 0x9a, 0xac, 0xff, 0x85, 0x26, 0x17, 0x36, 0xb9, 0xf0, 0x5e, 0x97, 0xf9,
	0x3e, 0x7b, 0x8c, 0x8a, 0x4a, 0x70, 0x43, 0x83, 0x0b, 0xe6, 0xc6, 0x52, 0x16, 0x4f, 0xaf, 0x42,
	0xa9, 0x28, 0x13, 0xf3, 0x1e, 0x02, 0x8d, 0xf9, 0xe4, 0x7b, 0xbb, 0x35, 0x53, 0x70, 0xc5, 0xbc,
	0xf8, 0x43, 0x0b, 0x65, 0x4d, 0x1f, 0x81, 0x5c, 0xee, 0xd6, 0x63, 0x83, 0x16, 0xcc, 0x4f, 0x64,
	0x15, 0x17, 0xc2, 0xaa, 0x01, 0x02, 0x01, 0xf7, 0xcc, 0xda, 0xb0, 0x6b, 0x36, 0x4d, 0xf3, 0x77,
	0x91, 0x6c, 0xd6, 0xd6, 0x0d, 0x11, 0x68, 0xc4, 0xfd, 0xd3, 0xdc, 0x85, 0xbb, 0xad, 0x85, 0x23,
	0x04, 0x1a, 0x9e, 0xe0, 0x6e, 0xdb, 0xfa, 0xbb, 0xb4, 0x90, 0x91, 0xb6, 0x6c, 0x8c, 0x40, 0x0e,
	0x77, 0xeb, 0xb1, 0x41, 0x37, 0x6c, 0xa6, 0xba, 0x77, 0x7f, 0x21, 0xd0, 0x94, 0x4f, 0x55, 0xe7,
	0xb0, 0xa5, 0xad, 0xcb, 0x0c, 0x81, 0x66, 0x0d, 0xfd, 0x39, 0xbd, 0x60, 0xbe, 0xca, 0xf7, 0xba,
	0xd5, 0x9c, 0x20, 0xd0, 0x6f, 0xee, 0x99, 0xb5, 0xc3, 0x5a, 0x3d, 0x17, 0x81, 0x02, 0xc3, 0xce,
	0x6a, 0xd5, 0x79, 0xcd, 0x43, 0x20, 0x8f, 0x7b, 0x55, 0xb7, 0x56, 0x9d, 0xd7, 0x7c, 0x04, 0xea,
	0x1b, 0x66, 0x6b, 0xf1, 0xb0, 0x7e, 0xf4, 0xcd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0xee,
	0xca, 0x2e, 0x6c, 0x02, 0x00, 0x00,
}

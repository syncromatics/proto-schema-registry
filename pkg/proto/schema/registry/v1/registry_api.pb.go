// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/schema/registry/v1/registry_api.proto

package registryv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetSchemaRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSchemaRequest) Reset()         { *m = GetSchemaRequest{} }
func (m *GetSchemaRequest) String() string { return proto.CompactTextString(m) }
func (*GetSchemaRequest) ProtoMessage()    {}
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91276b0e62cdda13, []int{0}
}

func (m *GetSchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchemaRequest.Unmarshal(m, b)
}
func (m *GetSchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchemaRequest.Marshal(b, m, deterministic)
}
func (m *GetSchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchemaRequest.Merge(m, src)
}
func (m *GetSchemaRequest) XXX_Size() int {
	return xxx_messageInfo_GetSchemaRequest.Size(m)
}
func (m *GetSchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchemaRequest proto.InternalMessageInfo

func (m *GetSchemaRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetSchemaResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	Schema               []byte   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSchemaResponse) Reset()         { *m = GetSchemaResponse{} }
func (m *GetSchemaResponse) String() string { return proto.CompactTextString(m) }
func (*GetSchemaResponse) ProtoMessage()    {}
func (*GetSchemaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91276b0e62cdda13, []int{1}
}

func (m *GetSchemaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchemaResponse.Unmarshal(m, b)
}
func (m *GetSchemaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchemaResponse.Marshal(b, m, deterministic)
}
func (m *GetSchemaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchemaResponse.Merge(m, src)
}
func (m *GetSchemaResponse) XXX_Size() int {
	return xxx_messageInfo_GetSchemaResponse.Size(m)
}
func (m *GetSchemaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchemaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchemaResponse proto.InternalMessageInfo

func (m *GetSchemaResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *GetSchemaResponse) GetSchema() []byte {
	if m != nil {
		return m.Schema
	}
	return nil
}

type RegisterSchemaRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Schema               []byte   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterSchemaRequest) Reset()         { *m = RegisterSchemaRequest{} }
func (m *RegisterSchemaRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterSchemaRequest) ProtoMessage()    {}
func (*RegisterSchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91276b0e62cdda13, []int{2}
}

func (m *RegisterSchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterSchemaRequest.Unmarshal(m, b)
}
func (m *RegisterSchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterSchemaRequest.Marshal(b, m, deterministic)
}
func (m *RegisterSchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterSchemaRequest.Merge(m, src)
}
func (m *RegisterSchemaRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterSchemaRequest.Size(m)
}
func (m *RegisterSchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterSchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterSchemaRequest proto.InternalMessageInfo

func (m *RegisterSchemaRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *RegisterSchemaRequest) GetSchema() []byte {
	if m != nil {
		return m.Schema
	}
	return nil
}

type RegisterSchemaResponse struct {
	// Types that are valid to be assigned to Response:
	//	*RegisterSchemaResponse_ResponseSuccess
	//	*RegisterSchemaResponse_ResponseError
	Response             isRegisterSchemaResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RegisterSchemaResponse) Reset()         { *m = RegisterSchemaResponse{} }
func (m *RegisterSchemaResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterSchemaResponse) ProtoMessage()    {}
func (*RegisterSchemaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91276b0e62cdda13, []int{3}
}

func (m *RegisterSchemaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterSchemaResponse.Unmarshal(m, b)
}
func (m *RegisterSchemaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterSchemaResponse.Marshal(b, m, deterministic)
}
func (m *RegisterSchemaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterSchemaResponse.Merge(m, src)
}
func (m *RegisterSchemaResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterSchemaResponse.Size(m)
}
func (m *RegisterSchemaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterSchemaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterSchemaResponse proto.InternalMessageInfo

type isRegisterSchemaResponse_Response interface {
	isRegisterSchemaResponse_Response()
}

type RegisterSchemaResponse_ResponseSuccess struct {
	ResponseSuccess *RegisterSchemaSuccess `protobuf:"bytes,1,opt,name=response_success,json=responseSuccess,proto3,oneof"`
}

type RegisterSchemaResponse_ResponseError struct {
	ResponseError *RegisterSchemaError `protobuf:"bytes,2,opt,name=response_error,json=responseError,proto3,oneof"`
}

func (*RegisterSchemaResponse_ResponseSuccess) isRegisterSchemaResponse_Response() {}

func (*RegisterSchemaResponse_ResponseError) isRegisterSchemaResponse_Response() {}

func (m *RegisterSchemaResponse) GetResponse() isRegisterSchemaResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *RegisterSchemaResponse) GetResponseSuccess() *RegisterSchemaSuccess {
	if x, ok := m.GetResponse().(*RegisterSchemaResponse_ResponseSuccess); ok {
		return x.ResponseSuccess
	}
	return nil
}

func (m *RegisterSchemaResponse) GetResponseError() *RegisterSchemaError {
	if x, ok := m.GetResponse().(*RegisterSchemaResponse_ResponseError); ok {
		return x.ResponseError
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RegisterSchemaResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RegisterSchemaResponse_ResponseSuccess)(nil),
		(*RegisterSchemaResponse_ResponseError)(nil),
	}
}

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91276b0e62cdda13, []int{4}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91276b0e62cdda13, []int{5}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetSchemaRequest)(nil), "proto.schema.registry.v1.GetSchemaRequest")
	proto.RegisterType((*GetSchemaResponse)(nil), "proto.schema.registry.v1.GetSchemaResponse")
	proto.RegisterType((*RegisterSchemaRequest)(nil), "proto.schema.registry.v1.RegisterSchemaRequest")
	proto.RegisterType((*RegisterSchemaResponse)(nil), "proto.schema.registry.v1.RegisterSchemaResponse")
	proto.RegisterType((*PingRequest)(nil), "proto.schema.registry.v1.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "proto.schema.registry.v1.PingResponse")
}

func init() {
	proto.RegisterFile("proto/schema/registry/v1/registry_api.proto", fileDescriptor_91276b0e62cdda13)
}

var fileDescriptor_91276b0e62cdda13 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xdf, 0x8a, 0xda, 0x40,
	0x14, 0xc6, 0x4d, 0x68, 0x45, 0x4f, 0x34, 0xb5, 0x43, 0x2b, 0x21, 0xf4, 0x42, 0x02, 0x2d, 0x52,
	0xe9, 0xa4, 0xb1, 0xa5, 0xf7, 0xb5, 0x48, 0xed, 0x5d, 0x18, 0xa9, 0xb0, 0xcb, 0x82, 0xb8, 0x71,
	0x70, 0xe7, 0x42, 0x93, 0x9d, 0x89, 0xb2, 0xfb, 0x4a, 0xfb, 0x12, 0xfb, 0x1e, 0xfb, 0x34, 0x4b,
	0xe6, 0x4f, 0x50, 0x21, 0x98, 0xab, 0xe4, 0x9c, 0xf9, 0xbe, 0xdf, 0x39, 0xf3, 0x0d, 0x8c, 0x32,
	0x9e, 0xe6, 0x69, 0x28, 0x92, 0x3b, 0xba, 0x5d, 0x85, 0x9c, 0x6e, 0x98, 0xc8, 0xf9, 0x63, 0x78,
	0x88, 0xca, 0xff, 0xe5, 0x2a, 0x63, 0x58, 0xaa, 0x90, 0x27, 0x3f, 0x58, 0x89, 0xb1, 0x11, 0xe0,
	0x43, 0xe4, 0xff, 0xbc, 0x80, 0xa1, 0x7c, 0xa9, 0xce, 0x96, 0x94, 0xf3, 0x94, 0x2b, 0x9e, 0xff,
	0xab, 0xb6, 0x4b, 0xec, 0x93, 0x84, 0x0a, 0xa1, 0x7c, 0x41, 0x00, 0xbd, 0xbf, 0x34, 0x9f, 0xcb,
	0x23, 0x42, 0xef, 0xf7, 0x54, 0xe4, 0xc8, 0x05, 0x9b, 0xad, 0x3d, 0x6b, 0x60, 0x0d, 0xbb, 0xc4,
	0x66, 0xeb, 0xe0, 0x0f, 0xbc, 0x3f, 0xd2, 0x88, 0x2c, 0xdd, 0x09, 0x8a, 0xfa, 0xd0, 0xa4, 0x0f,
	0x4c, 0xe4, 0x42, 0x0a, 0x5b, 0x44, 0x57, 0x45, 0x5f, 0x0d, 0xf2, 0xec, 0x81, 0x35, 0xec, 0x10,
	0x5d, 0x05, 0x53, 0xf8, 0x48, 0xf4, 0x26, 0xa7, 0xd3, 0x3e, 0xc0, 0xdb, 0x3c, 0xcd, 0x58, 0x22,
	0x39, 0x6d, 0xa2, 0x8a, 0x4a, 0xcc, 0x8b, 0x05, 0xfd, 0x73, 0x8e, 0xde, 0xe8, 0x06, 0x7a, 0x5c,
	0xff, 0x9b, 0x4b, 0x4a, 0xa6, 0x33, 0x0e, 0x71, 0x55, 0xda, 0xf8, 0x94, 0x35, 0x57, 0xb6, 0x59,
	0x83, 0xbc, 0x33, 0x28, 0xdd, 0x42, 0x0b, 0x70, 0x4b, 0xba, 0x0c, 0x5e, 0x2e, 0xe6, 0x8c, 0xbf,
	0xd5, 0x65, 0x4f, 0x0b, 0xd3, 0xac, 0x41, 0xba, 0x06, 0x23, 0x1b, 0x13, 0x80, 0x96, 0x69, 0x04,
	0x5d, 0x70, 0x62, 0xb6, 0xdb, 0xe8, 0x64, 0x02, 0x17, 0x3a, 0xaa, 0x54, 0xc7, 0xe3, 0x67, 0x1b,
	0x1c, 0xa2, 0xf9, 0xbf, 0xe3, 0x7f, 0x68, 0x0d, 0xed, 0xf2, 0x5d, 0xd0, 0xd7, 0xea, 0x3d, 0xce,
	0x1f, 0xd8, 0x1f, 0xd5, 0xd2, 0xea, 0x58, 0x05, 0xb8, 0xa7, 0x17, 0x41, 0xb5, 0xe3, 0x34, 0xf3,
	0xbe, 0xd7, 0x37, 0xe8, 0xa1, 0xff, 0xe1, 0x4d, 0x71, 0x75, 0xf4, 0xb9, 0xda, 0x79, 0x94, 0x94,
	0xff, 0xe5, 0x92, 0x4c, 0x61, 0x27, 0x57, 0xf0, 0x29, 0x49, 0xb7, 0x95, 0xe2, 0x49, 0xaf, 0x8c,
	0x37, 0x63, 0x71, 0x21, 0x8a, 0xad, 0x6b, 0x30, 0x82, 0x43, 0xf4, 0x64, 0x7b, 0xb2, 0x8b, 0xd5,
	0xb6, 0xd8, 0xa8, 0xf1, 0x22, 0xba, 0x6d, 0x4a, 0xe8, 0x8f, 0xd7, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x23, 0x4d, 0x09, 0x76, 0x06, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistryAPIClient is the client API for RegistryAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistryAPIClient interface {
	// GetSchema will return the schema at the specific version.
	GetSchema(ctx context.Context, in *GetSchemaRequest, opts ...grpc.CallOption) (*GetSchemaResponse, error)
	// RegisterSchema will create a new version or return the version of the schema that matches the request.
	RegisterSchema(ctx context.Context, in *RegisterSchemaRequest, opts ...grpc.CallOption) (*RegisterSchemaResponse, error)
	// Ping will return a response.
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type registryAPIClient struct {
	cc *grpc.ClientConn
}

func NewRegistryAPIClient(cc *grpc.ClientConn) RegistryAPIClient {
	return &registryAPIClient{cc}
}

func (c *registryAPIClient) GetSchema(ctx context.Context, in *GetSchemaRequest, opts ...grpc.CallOption) (*GetSchemaResponse, error) {
	out := new(GetSchemaResponse)
	err := c.cc.Invoke(ctx, "/proto.schema.registry.v1.RegistryAPI/GetSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryAPIClient) RegisterSchema(ctx context.Context, in *RegisterSchemaRequest, opts ...grpc.CallOption) (*RegisterSchemaResponse, error) {
	out := new(RegisterSchemaResponse)
	err := c.cc.Invoke(ctx, "/proto.schema.registry.v1.RegistryAPI/RegisterSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryAPIClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/proto.schema.registry.v1.RegistryAPI/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistryAPIServer is the server API for RegistryAPI service.
type RegistryAPIServer interface {
	// GetSchema will return the schema at the specific version.
	GetSchema(context.Context, *GetSchemaRequest) (*GetSchemaResponse, error)
	// RegisterSchema will create a new version or return the version of the schema that matches the request.
	RegisterSchema(context.Context, *RegisterSchemaRequest) (*RegisterSchemaResponse, error)
	// Ping will return a response.
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

func RegisterRegistryAPIServer(s *grpc.Server, srv RegistryAPIServer) {
	s.RegisterService(&_RegistryAPI_serviceDesc, srv)
}

func _RegistryAPI_GetSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryAPIServer).GetSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.schema.registry.v1.RegistryAPI/GetSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryAPIServer).GetSchema(ctx, req.(*GetSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryAPI_RegisterSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryAPIServer).RegisterSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.schema.registry.v1.RegistryAPI/RegisterSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryAPIServer).RegisterSchema(ctx, req.(*RegisterSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryAPI_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryAPIServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.schema.registry.v1.RegistryAPI/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryAPIServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegistryAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.schema.registry.v1.RegistryAPI",
	HandlerType: (*RegistryAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSchema",
			Handler:    _RegistryAPI_GetSchema_Handler,
		},
		{
			MethodName: "RegisterSchema",
			Handler:    _RegistryAPI_RegisterSchema_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _RegistryAPI_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/schema/registry/v1/registry_api.proto",
}
